version: "3"

networks: 
  backend:
    driver: bridge

services:
  server:
    container_name: server
    build:
      context: ./
      dockerfile: Dockerfile.dev
    volumes:
      - ./:/usr/src/app  
      - /usr/src/app/node_modules      
    env_file:
      - ./.env
    networks:
      - backend  
    depends_on:
      - mongodb1
    ports:
      - 3000:3000
    restart: always

  mongodb1:
    container_name: mongodb1
    image: mongo
    networks:
      - backend
    volumes:
      - ./data/db-01:/data/db
      - ./dbinit.sh:/docker-entrypoint-initdb.d/dbinit.sh:ro
      # - ./mongodb.key:/keys/mongodb.key:ro
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_TEST_DATABASE: ${MONGO_TEST_DATABASE}
    command: ["mongod", "--bind_ip_all", "--replSet", "rs0"]
    restart: unless-stopped

  # mongodb2:
  #   container_name: mongodb2
  #   image: mongo
  #   networks:
  #     - backend
  #   volumes:
  #     - ./data/db-02:/data/db
  #     - ./dbinit.sh:/docker-entrypoint-initdb.d/dbinit.sh:ro
  #     - ./mongodb.key:/keys/mongodb.key:ro
  #   ports:
  #     - 27018:27017
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  #     MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
  #     MONGO_TEST_DATABASE: ${MONGO_TEST_DATABASE}
  #   command: ["mongod", "--bind_ip_all", "--replSet", "rs0", "--keyFile", "/keys/mongodb.key"]
  #   restart: unless-stopped

  # mongodb3:
  #   container_name: mongodb3
  #   image: mongo
  #   networks:
  #     - backend
  #   volumes:
  #     - ./data/db-03:/data/db
  #     - ./dbinit.sh:/docker-entrypoint-initdb.d/dbinit.sh:ro
  #     - ./mongodb.key:/keys/mongodb.key:ro
  #   ports:
  #     - 27019:27017
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  #     MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
  #     MONGO_TEST_DATABASE: ${MONGO_TEST_DATABASE}
  #   command: ["mongod", "--bind_ip_all", "--replSet", "rs0", "--keyFile", "/keys/mongodb.key"]
  #   restart: unless-stopped

  repl-helper:
    container_name: repl-helper
    image: repl-helper
    build:
      context: ./
      dockerfile: Dockerfile.repl
    networks:
      - backend
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    depends_on:
      - mongodb1

  nginx:
    container_name: nginx
    restart: always
    image: nginx:latest
    volumes: 
      - ./epiclogue.ssl/cert:/ssl
      - ./epiclogue.ssl/conf/server.conf:/etc/nginx/nginx.conf
    ports:
      - 443:443
      - 80:80
    networks:
      - backend
    depends_on:
      - server
