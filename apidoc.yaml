swagger: "2.0"
info:
  description: "This is a epiclogue api document."
  version: "1.0.0"
  title: "epiclogue API"
  contact:
    email: "dladsds123@gmail.com"
host: "api.epiclogue.com"
basePath: "/"
tags:
- name: "user"
  description: "user functions"
- name: "boards"
  description: "functions for boards"
- name: "auth"
  description: "auth functions"
- name: "interaction"
  description: "interaction functions"
- name: "search"
  description: "search functions"
- name: "suggest"
  description: "suggest functions"
- name: "notifycation"
  description: "notify functions"
- name: "myboard"
  description: "myboard functions"
schemes:
- "https"
paths:
  /user:
    delete:
      tags:
      - "user"
      summary: "user delete"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        description: "user auth info"
        required: true
        schema:
          type: object
          properties:
            userPw:
              type: string
      responses:
        200:
          description: OK
        400:
          description: ERROR
      security:
        - access_token: []

  /user/editprofile:
    get:
      tags:
      - "user"
      summary: "get userInfo"
      description: ""
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              nickname: 
                type: string
              intro:
                type: string
              country:
                type: string
              screenId:
                type: string
              banner:
                type: string
              profile:
                type: string
              email:
                type: string
      security:
        - access_token: []

    post:
      tags:
      - "user"
      summary: "post userInfo for edit"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        description: "new userInfo data"
        required: true
        schema:
          type: object
          properties:
            screenId:
              type: string
            userNick:
              type: string
            userCountry:
              type: string
            userLang:
              type: string
            userIntro:
              type: string
            userBannerImg:
              type: array
              items:
                type: string
            userProfileImg:
              type: array
              items:
                type: string
      responses:
        200:
          description: OK
        400:
          description: ERROR
      security:
        - access_token: []
  
  /user/changePass:
    fetch:
      tags:
      - "user"
      summary: "for change user password"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        description: "params for password change"
        required: true
        schema:
          type: object
          properties:
            userPw:
              type: string
            userPwNew:
              type: string
            userPwNewRe:
              type: string
      responses:
        200:
          description: OK
        400:
          description: ERROR
      security:
        - access_token: []
  /auth/snsLogin:
    post:
      tags:
      - "auth"
      summary: "for sns login"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        description: "params for login"
        required: true
        schema:
          type: object
          properties:
            userData:
              type: object
              properties:
                token:
                  type: string
                email:
                  type: string
                nickname:
                  type: string
            snsType:
              type: string
      responses:
        201:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              token:
                type: string
              nick:
                type: string
              screenId:
                type: string
  /auth/login:
    post:
      tags:
      - "auth"
      summary: "for login"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        description: "params for login"
        required: true
        schema:
          type: object
          properties:
            email:
              type: string
            userPw:
              type: string
      responses:
        201:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              token:
                type: string
              nick:
                type: string
              screenId:
                type: string
        400:
          description: "incorrect password"
          schema:
            $ref: '#/definitions/API_response_error'
        404:
          description: "not found error"
          schema:
            $ref: '#/definitions/API_response_error'
  /auth/join:
    post:
      tags:
      - "auth"
      summary: "for join"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        description: "join info"
        required: true
        schema:
          type: object
          properties:
            email:
              type: string
            userPw:
              type: string
            userPwRe:
              type: string
            userNick:
              type: string
            userLang:
              type: string
      responses:
        201:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              info:
                type: string
        401:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
  /auth/findPass:
    post:
      tags:
      - "auth"
      summary: "Change password who lost it"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        required: true
        description: "Email whose lost password"
        schema:
          type: object
          properties:
            email:
              type: string
              example: "lost@lunarcat.com"
      responses:
        201:
          description: OK
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
    patch:
      tags:
      - "auth"
      summary: "Change password who lost it"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        required: true
        description: "Email whose lost password"
        schema:
          type: object
          properties:
            email:
              type: string
              example: "lost@lunarcat.com"
            token:
              type: string 
              example: "13abe90105628acf1461947aff"
            userPwNew:
              type: string
              example: "newpassword1234!"
            newPwNewRe:
              type: string
              example: "newpassword1234!"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
        400:
          description: ERROR
          content:
            application/json:
              schema:
                type: object
                properties:
                  result: 
                    type: string
                    example: 'error'
                  message:
                    type: string
                    example: '비밀번호가 서로 다릅니다.'
        401:
          description: ERROR
          content:
            application/json:
              schema:
                type: object
                properties:
                  result: 
                    type: string
                    example: 'error'
                  message:
                    type: string
                    example: '적절하지 않은 토큰입니다.'
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error' 
  /auth/mailAuth:
    get:
      tags:
      - "auth"
      summary: "for mailAuth"
      description: ""
      parameters:
      - name: "email"
        in: "query"
        description: "user's email"
        required: true
        type: string
      - name: "token"
        in: "query"
        description: "user's token"
        required: true
        type: string
      responses:
        201:
          description: OK
        401:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
    
  /boards:
    get:
      tags:
      - "boards"
      summary: "get boards for main page"
      description: ""
      parameters:
      - name: "type"
        in: "query"
        description: "projection type"
        required: false
        type: string
        example: "Comic"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/board_thumb'
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []

    post:
      tags:
      - "boards"
      summary: "post board to server"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        required: true
        description: "board info body"
        schema:
          type: object
          properties:
            boardTitle:
              type: string
            boardBody:
              type: string
            category:
              type: number
            pub:
              type: number
            language:
              type: string
            boardImg:
              type: array
              items:
                type: number
      responses:
        201:
          description: OK
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []
    
  /boards/sec:
    post:
      tags:
      - "boards"
      summary: "post sec board to server"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        required: true
        description: "board info body"
        schema:
          type: object
          properties:
            boardTitle:
              type: string
            boardBody:
              type: string
            category:
              type: number
            pub:
              type: number
            language:
              type: string
            boardImg:
              type: array
              items:
                type: string
            originUserId:
              type: string
            originBoardId:
              type: string
      responses:
        201:
          description: OK
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []

  /boards/{boardUid}:
    get:
      tags:
      - "boards"
      summary: "get board info for view"
      description: ""
      parameters:
      - name: "boardUid"
        in: "path"
        description: "ID of board"
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: object
                $ref: '#/definitions/board_view'
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []
    
    delete:
      tags:
      - "boards"
      summary: "delete board"
      description: ""
      parameters:
      - name: "boardUid"
        in: "path"
        description: "ID of board"
        required: true
        type: string
      responses:
        200:
          description: OK
        400:
          description: FAIL
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []
  
  /boards/{boardUid}/react:
    get:
      tags:
      - "boards"
      summary: "get board react list"
      description: ""
      parameters:
      - name: "boardUid"
        in: "path"
        description: "ID of board"
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: string
                    userProfileImage:
                      type: string
                    nickname:
                      type: string
                    type:
                      type: string
                    createdAt:
                      type: string
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []
  /boards/{boardUid}/edit:
    get:
      tags:
      - "boards"
      summary: "get board info for edit"
      description: ""
      parameters:
      - name: "boardUid"
        in: "path"
        description: "ID of board"
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                $ref: '#/definitions/board_view'
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []
    post:
      tags:
      - "boards"
      summary: "post new board info"
      description: ""
      parameters:
      - name: "boardUid"
        in: "path"
        description: "ID of board"
        required: true
        type: string
      - name: "Body"
        in: "body"
        description: "new info for board"
        required: true
        schema:
          type: object
          properties:
            boardTitle:
              type: string
            boardBody:
              type: string
            boardImg:
              type: array
              items:
                type: string
            category:
              type: string
            pub:
              type: number
            language:
              type: string
      responses:
        200:
          description: OK
        404:
          description: not found
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []

  /boards/{boardUid}/feedback:
    post:
      tags:
      - "boards"
      summary: "post feedback into board"
      description: ""
      parameters:
      - name: "boardUid"
        in: "path"
        description: "ID of board"
        required: true
        type: string
      - name: "Body"
        in: "body"
        description: "feedback info"
        required: true
        schema:
          type: object
          properties:
            feedbackBody:
              type: string
      responses:
        201:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: array
                items:
                  $ref: '#/definitions/Feedback'
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []
    
  /boards/{boardUid}/feedback/{feedbackUid}:
    patch:
      tags:
      - "boards"
      summary: "patch feedback"
      description: ""
      parameters:
      - name: "boardUid"
        in: "path"
        description: "ID of board"
        required: true
        type: string
      - name: "feedbackUid"
        in: "path"
        description: "ID of feedback"
        required: true
        type: string
      - name: "Body"
        in: "body"
        description: "feedback new info"
        required: true
        schema:
          type: object
          properties:
            newFeedbackBody:
              type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: array
                items:
                  $ref: '#/definitions/Feedback'
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []

    delete:
      tags:
      - "boards"
      summary: "delete feedback"
      description: ""
      parameters:
      - name: "boardUid"
        in: "path"
        description: "ID of board"
        required: true
        type: string
      - name: "feedbackUid"
        in: "path"
        description: "ID of feedback"
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: array
                items:
                  $ref: '#/definitions/Feedback'
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []
    
  /boards/{boardUid}/feedback/{feedbackUid}/reply:
    post:
      tags:
      - "boards"
      summary: "post reply into feedback"
      description: ""
      parameters:
      - name: "boardUid"
        in: "path"
        description: "ID of board"
        required: true
        type: string
      - name: "feedbackUid"
        in: "path"
        description: "ID of feedback"
        required: true
        type: string
      - name: "Body"
        in: "body"
        description: "reply info"
        required: true
        schema:
          type: object
          properties:
            replyBody:
              type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: array
                items:
                  $ref: '#/definitions/Reply'
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []

    get:
      tags:
      - "boards"
      summary: "get reply list"
      description: ""
      parameters:
      - name: "boardUid"
        in: "path"
        description: "ID of board"
        required: true
        type: string
      - name: "feedbackUid"
        in: "path"
        description: "ID of feedback"
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: array
                items:
                  $ref: '#/definitions/Reply'
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []
    
  /boards/{boardUid}/feedback/{feedbackUid}/reply/{replyUid}:
    patch:
      tags:
      - "boards"
      summary: "patch reply"
      description: ""
      parameters:
      - name: "boardUid"
        in: "path"
        description: "ID of board"
        required: true
        type: string
      - name: "feedbackUid"
        in: "path"
        description: "ID of feedback"
        required: true
        type: string
      - name: "replyUid"
        in: "path"
        description: "ID of reply"
        required: true
        type: string
      - name: "Body"
        in: "body"
        description: "reply new info"
        required: true
        schema:
          type: object
          properties:
            newReplyBody:
              type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: array
                items:
                  $ref: '#/definitions/Reply'
        404:
          description: not found
          schema:
            $ref: '#/definitions/API_response_error'
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []

    delete:
      tags:
      - "boards"
      summary: "delete reply"
      description: ""
      parameters:
      - name: "boardUid"
        in: "path"
        description: "ID of board"
        required: true
        type: string
      - name: "feedbackUid"
        in: "path"
        description: "ID of feedback"
        required: true
        type: string
      - name: "replyUid"
        in: "path"
        description: "ID of reply"
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: array
                items:
                  $ref: '#/definitions/Reply'
        404:
          description: not found
          schema:
            $ref: '#/definitions/API_response_error'
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []
  /interaction/bookmark:
    post:
      tags:
      - "interaction"
      summary: "add board into bookmark"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        required: true
        schema:
          type: object
          properties:
            boardId:
              type: string
      responses:
        201:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: integer
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []

    delete:
      tags:
      - "interaction"
      summary: "delete bookmark"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        required: true
        schema:
          type: object
          properties:
            boardId:
              type: string
      responses:
        201:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: integer
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []

    get:
      tags:
      - "interaction"
      summary: "get bookmark list"
      description: ""
      parameters:
      - name: "screenId"
        in: "query"
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: array
                items:
                  $ref: '#/definitions/board_thumb'
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []
    
  /interaction/like:
    post:
      tags:
      - "interaction"
      summary: "add like"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        required: true
        schema:
          type: object
          properties:
            targetInfo:
              type: string
            targetType:
              type: string
      responses:
        201:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: integer
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []

    delete:
      tags:
      - "interaction"
      summary: "delete like"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        required: true
        schema:
          type: object
          properties:
            targetInfo:
              type: string
            targetType:
              type: string
      responses:
        201:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: integer
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []
  
    get:
      tags:
      - "interaction"
      summary: "get like list"
      description: ""
      parameters:
      - name: "screenId"
        in: "query"
        required: true
        type: string
      - name: "targetType"
        in: "query"
        required: true
        description: 'all is get all like data, not save db data'
        type: string
        enum:
        - "Board"
        - "Feedback"
        - "Reply"
        - "all"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: array
                items:
                  $ref: '#/definitions/board_thumb'
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []
    
  /interaction/follow:
    post:
      tags:
      - "interaction"
      summary: "add follow"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        required: true
        schema:
          type: object
          properties:
            targetUserId:
              type: string
      responses:
        201:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: integer
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []

    delete:
      tags:
      - "interaction"
      summary: "delete follow"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        required: true
        schema:
          type: object
          properties:
            targetUserId:
              type: string
      responses:
        201:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: integer
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []

    get:
      tags:
      - "interaction"
      summary: "get follow list"
      description: ""
      parameters:
      - name: "screenId"
        in: "query"
        required: true
        type: string
      - name: "type"
        in: "query"
        required: true
        type: string
        enum: ["following", "follower"]
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                example: "ok"
              data:
                type: array
                items:
                  $ref: '#/definitions/Follow'
        500:
          description: ERROR
          schema:
            $ref: '#/definitions/API_response_error'
      security:
        - access_token: []

  /search:
    get:
      tags:
      - "search"
      summary: "search function"
      description: ""
      parameters:
      - name: "q"
        in: "query"
        description: "for search query string"
        required: true
        type: string
      responses:
        200:
          description: OK
      security:
        - access_token: []

  /suggest:
    get:
      tags:
      - "suggest"
      summary: "suggest search keyword"
      description: ""
      parameters:
      - name: "q"
        in: "query"
        description: "for search suggest string"
        required: true
        type: string
      responses:
        200:
          description: OK
      security:
        - access_token: []

  /myboard/{screenId}:
    get:
      tags:
      - "myboard"
      summary: "Get user info"
      description: ""
      parameters:
      - name: "screenId"
        in: "params"
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              nickname: 
                type: string
              intro:
                type: string
              screenId:
                type: string
              banner:
                type: string
              profile:
                type: string
              followerCount:
                type: number
              followingCount:
                type: number
      security:
        - access_token: []

  /myboard/{screenId}/all:
    get:
      tags:
      - "myboard"
      summary: "Get all works"
      description: ""
      parameters:
      - name: "screenId"
        in: "params"
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/board_thumb'
      security:
        - access_token: []
  
  /myboard/{screenId}/originals:
    get:
      tags:
      - "myboard"
      summary: "Get original works"
      description: ""
      parameters:
      - name: "screenId"
        in: "params"
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/board_thumb'
      security:
        - access_token: []

  /myboard/{screenId}/secondaryWorks:
    get:
      tags:
      - "myboard"
      summary: "Get secondary works"
      description: ""
      parameters:
      - name: "screenId"
        in: "params"
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/board_thumb'
      security:
        - access_token: []

  /myboard/{screenId}/bookmarks:
    get:
      tags:
      - "myboard"
      summary: "Get bookmarks"
      description: ""
      parameters:
      - name: "screenId"
        in: "params"
        required: true
        type: string
      responses:
        200:
          description: OK
      security:
        - access_token: []

  /notification:
    get:
      tags:
      - "notification"
      summary: "Get notifications and set read all"
      description: ""
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification'
      security:
        - access_token: []
    patch:
      tags:
      - "notification"
      summary: "Read notification"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        description: "Notificataion ID to read"
        required: true
        schema:
          type: object
          properties:
            notiId:
              type: string
      responses:
        200:
          description: OK
      security:
        - access_token: []
    delete:
      tags:
      - "notification"
      summary: "Delete notification"
      description: ""
      parameters:
      - name: "Body"
        in: "body"
        description: "Notificataion ID to delete"
        required: true
        schema:
          type: object
          properties:
            notiId:
              type: string
      responses:
        200:
          description: OK
      security:
        - access_token: []

  /notification/all:
    patch:
      tags:
      - "notification"
      summary: "Read all notifications"
      description: ""
      responses:
        200:
          description: OK
      security:
        - access_token: []
    delete:
      tags:
      - "notification"
      summary: "Delete all notifications"
      description: ""
      responses:
        200:
          description: OK
      security:
        - access_token: []
  
  /notification/check:
    get:
      tags:
      - "notification"
      summary: "Get number of notifications"
      description: ""
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              notiCount:
                type: number
                example: 3
      security:
        - access_token: []

securityDefinitions:
  access_token:
    description: "insert your accessToken in login response."
    type: apiKey
    name: "x-access-token"
    in: "header"
definitions:
  board_thumb:
    type: "object"
    properties:
      _id: 
        type: string
        example: '1a4c6ea830e14ef67'
      boardTitle:
        type: string
        example: 'latata'
      boardImg:
        type: array
        example: ["link1", "link2"]
      category:
        type: number
        example: 0
      pub: 
        type: number
        example: 1 
      writer:
        type: object
        $ref: '#/definitions/Writer'
      liked:
        type: boolean
        example: true
      bookmarked:
        type: boolean
        example: false

  board_view:
    type: "object"
    required: 
    - "boardImg"
    - "category"
    - "pub"
    properties:
      boardImg:
        type: array
        example: ["link1", "link2"]
      boardTitle:
        type: string
        example: 'WA!'
      boardBody:
        type: string
        example: "SANS!"
      category:
        type: string
        example: "comic"
      pub:
        type: number
        example: 1
      writeDate:
        type: string
        format: date-time
        default: "2018-03-20T09:12:28Z"
      language:
        type: string
        default: "korean"
      heartCount:
        type: number
        default: 0
      feedbackCount:
        type: number
        default: 0
      bookmarkCount:
        type: number
        default: 5
      reactCount:
        type: number
        default: 10
      originUserId:
        type: string
      originBoardId:
        type: string
      allowSecondaryCreation:
        type: string
      edited:
        type: boolean
        default: false
      bookmarked:
        type: boolean
        default: false
      liked:
        type: boolean
        default: false
      writer:
        type: Object
        $ref: '#/definitions/Writer'
      feedbacks:
        type: array
        $ref: '#/definitions/Feedback'

  Writer:
    type: object
    properties:
      _id:
        type: string
        example: '867cab2512312aed1f'
      nickname:
        type: string
        example: 'swagger_awe'
      screenId:
        type: string
        example: 'hippo'
      profile:
        type: string
        example: 'a_link'
      following:
        type: boolean
        example: true
        
  Feedback:
    type: "object"
    required: 
    - "userId"
    - "boardId"
    - "feedbackBody"
    properties:
      writer:
        type: object
        $ref: '#/definitions/Writer'
      feedbackBody:
        type: string
      writeDate:
        type: string
        format: date-time
        default: "2018-03-20T09:12:28Z"
      edited:
        type: boolean
        default: false
      childCount:
        type: number
        default: 0
      heartCount:
        type: number
        default: 0
      liked:
        type: boolean
        default: true

  User:
    type: "object"
    required: 
    - "nickname"
    - "email"
    - "password"
    - "joinDate"
    - "isConfirmed"
    properties:
      nickname: 
        type: string
      email:
        type: string
      password:
        type: string
      screenId:
        type: string
      country:
        type: string
      joinDate:
        type: number
      language:
        type: array
        items:
          type: string
      intro:
        type: string
      banner:
        type: string
      profile:
        type: string
      salt:
        type: string
      isConfirmed:
        type: boolean
        default: false
      token:
        type: string
      followerCount:
        type: number
      followingCount:
        type: number
  Reply:
    type: "object"
    required: 
    - "userId"
    - "boardId"
    - "parentId"
    - "replyBody"
    properties:
      userId:
        type: string
      boardId:
        type: string
      parentId:
        type: string
      replyBody:
        type: string
      writeDate:
        type: number
        default: Date.now
      edited:
        type: boolean
        default: false
      heartCount:
        type: number
        default: 0
      liked:
        type: boolean
        default: false
  React:
    type: "object"
    required:
    - "userId"
    - "boardId"
    - "type"
    properties:
      userId:
        type: string
      boardId:
        type: string
      type:
        type: string
        enum: 
        - "like"
        - "bookmark"
        - "translate"
      createdAt:
        type: number
        default: Date.now
  Bookmark:
    type: "object"
    required: 
    - "userId"
    - "boardId"
    properties:
      userId:
        type: string
      boardId:
        type: string
      createAt:
        type: number
        default: Date.now
  Like:
    type: "object"
    required: 
    - "userId"
    - "targetType"
    - "targetId"
    properties:
      userId:
        type: string
      targetType:
        type: string
      targetId:
        type: string
      createdAt:
        type: number
        default: Date.now
  Follow:
    type: "object"
    required: 
    - "userId"
    - "targetUserId"
    properties:
      _id: 
        type: string
      nickname:
        type: string
      screenId:
        type: string
        example: '@ttawadf'
      profile:
        type: string
        example: "https://lunarcat-dev.s3.amazon.com/lalala.png"
      following:
        type: boolean
      follower:
        type: boolean

  Notification:
    type: "object"
    required: 
    - "userId"
    - "targetId"
    - "type"
    properties:
      _id: 
        type: string
        example: "5fb26fed4c6a8d021412665a"
      userId:
        type: string
        example: "5fb2937ac9750d1cb7d1e85b"
      maker:
        type: object
        $ref: '#/definitions/Writer'
      targetType:
        type: string
        example: "5fb26fed4c6a8d021443f56e"
      targetInfo:
        type: object
        properties:
          _id:
            type: string
            example: "5fce00b437de6b024f4b3272"
          boardId:
            type: string 
            example: "5fc1192e929281006d036dd7"
          parentId: 
            type: string
            example: "5fce003fc8ba2c023375abc1"
          replyBody: 
            type: string
            example: "temp reply body"
          feedbackBody:
            type: string
            example: "temp feedback Body. It can be skipped if you want"
          boardTitle:
            type: string
            example: "board title. It can be skipped if you want"
      date:
        type: date
        default: Date.now
      read:
        type: boolean
        default: false
  API_response_success:
    type: "object"
    properties:
      result:
        type: string
        example: "ok"
      data:
       board_thumb type: object
  API_response_error:
    type: "object"
    properties:
      result:
        type: string
        example: "error"
      message:
        type: string
